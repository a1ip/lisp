#lang pollen

◊subsection[#:label "escape/actors/ssect:review"]{Краткий обзор~объектов}

◊indexR{объекты}
◊indexE{◊|Meroon|!вводное описание}
Мы пока не~будем детально разбирать устройство объектной системы — этой теме посвящена одиннадцатая глава.
Здесь~же мы приведём всего три~макроса и несколько правил именования,
которые описывают суть объектов без рассмотрения деталей их реализации.

Интерпретатор в~этой главе использует объекты для иллюстрации идеи продолжений.
Уж~очень хорошо понятие записей активации укладывается в~концепцию объектов с~полями.
Наследование также окажется весьма полезным, позволяя обобщить некоторые моменты реализации вместо дублирования~кода.

Предполагается, что вы знакомы с~философией, терминологией и подходами объектно-ориентированного программирования,
так что будет достаточно показать, как записываются известные вам идиомы, которые мы будем использовать.

◊indexR{классы}
◊indexR{методы}
◊indexR{обобщённые функции}
◊indexR{функции!обобщённые}
Объекты группируются в~◊term{классы};
объекты одного класса имеют общие ◊term{методы};
сообщения объектам посылаются с~помощью ◊term{обобщённых функций},
популяризованных ◊|CommonLoops|,◊seeCite{bkk+86} CLOS◊seeCite{bdg+88} и~◊|TELOS|.◊seeCite{pnb93}

Для нас главным преимуществом объектно-ориентированного программирования является
отделение обработки различных специальных форм и примитивных функций от ядра интерпретатора.
Обратной стороной такого стиля является сложность восприятия интерпретатора в~целом,
так как реализация отдельных возможностей оказывается размазанной по нескольким местам в~программе.
